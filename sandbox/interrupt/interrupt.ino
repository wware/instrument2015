/*
Adapted from https://www.pjrc.com/teensy/teensy31.html
the section entitled "12 Bit Analog Output", about using the DAC.
Here's a simple audio waveform generated by a timer interrupt.
*/

#include <TimerOne.h>

#define SAMPLING_FREQ 40000
#define DT (1.0 / SAMPLING_FREQ)
#define DT_USEC ((int) (1000000 * DT))

const double bits32 = 4294967296.0;   // 2 ** 32
const int maxvalue = 1 << 12;
const double f = 440.0;   // A above middle C

uint32_t phase = 0;
const uint32_t dphase = (uint32_t) (bits32 * f / SAMPLING_FREQ);

void setup(void)
{
  analogWriteResolution(12);
  Timer1.initialize(DT_USEC);
  Timer1.attachInterrupt(compute_sample);
}

void compute_sample(void)
{
  uint32_t bit = (((uint32_t) 1) << 31);
  // write the DAC first, to keep timing consistent, as there may be
  // variations in time to compute the next sample
  if (phase & bit) {
    analogWrite(A14, ((~phase) >> 19) & 0xFFF);
  } else {
    analogWrite(A14, (phase >> 19) & 0xFFF);
  }

  phase += dphase;
}

void loop(void)
{
}
